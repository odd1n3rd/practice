Программа имеет графический интерфейс на Qt, который позволяет пользователю:

1.Проверять целостность данных: Проверка целостности переменных dataVariable и textVariable, находящихся в оперативной памяти, с использованием хеш-функции SHA-256.
2.Показать известные хеши переменных, которые должны соответствовать их значениям при отсутствии изменений.
3.Показать текущие хеши переменных, что позволяет пользователю сравнить их с известными хешами.
4.Изменять значения переменных dataVariable и textVariable, чтобы симулировать изменения в памяти.
5.Периодически проверять целостность переменных каждые 10 секунд.




Функция calculateHash: Эта функция принимает указатель на данные и их размер в байтах, после чего создает хэш с использованием SHA-256.
Хэширование переменных: При нажатии кнопок или запуске определенных функций переменные dataVariable и textVariable хэшируются с использованием calculateHash.



Запустите приложение.
Нажмите "Display Current Hashes" - это покажет текущие хеши для переменных dataVariable и textVariable.
Сохраните текущие хеши и обновите известные хеши в коде mainwindow.cpp, заменив "0000000000000000000000000000000000000000000000000000000000000000" на текущие хеши.
Перезапустите приложение.
Нажмите "Modify Data" или "Modify Text" - это изменит значения переменных и должно вызвать изменение хешей.
Нажмите "Check Integrity" - программа должна обнаружить изменения и вывести "Data: CORRUPTED" или "Text: CORRUPTED".
Таким образом, программа демонстрирует, как можно отслеживать изменения в памяти и проверять целостность данных с использованием хеш-функций.



Пример
Начальное значение переменной: Допустим, dataVariable равно 0.
Хэширование начального значения: Хэш функции SHA-256 для значения 0 будет одним, например, "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855".
Изменение переменной: Когда вы нажимаете кнопку modifyData, dataVariable увеличивается на 1 (теперь dataVariable = 1).
Хэширование измененного значения: Хэш функции SHA-256 для значения 1 будет другим, например, "4bf29f15f0e17a37c189d9613f1ae8cfa8cc88b9f5c3e3962d55f019d1e01a6d".
Проверка целостности: Когда вы вызываете функцию checkIntegrity, она сравнивает текущий хэш с известным хэшем. Поскольку значение изменилось, хэш тоже изменится, и программа выявит это изменение, выводя "Data: CORRUPTED".
